{"version":3,"file":"TextareaInput.jsx","sourceRoot":"","sources":["TextareaInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,YAAY,CAAC;AAE5B,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAYvD,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,EASjB;IARnB,IAAA,EAAE,QAAA,EACF,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,eAAgB,EAAhB,OAAO,mBAAG,MAAM,KAAA,EAEhB,QAAQ,cAAA,EACR,KAAK,WAAA,EACF,UAAU,cARuB,+DASrC,CADc;IAEb,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,EAAE,CACX,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,EAChD,sBAAsB,CACvB,CAAC,CAEF;MAAA,CAAC,SAAS;YACR,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CACnC,CAAC,KAAK,CACJ,OAAO,CAAC,CAAC,EAAE,CAAC,CACZ,SAAS,CAAC,CAAC,gDAAgD,CAAC,CAE5D;YAAA,CAAC,SAAS,CAAE,CAAA,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAClE;UAAA,EAAE,KAAK,CAAC,CACT,CAAC,CAAC,CAAC,CACF,CAAC,KAAK,CACJ,OAAO,CAAC,CAAC,EAAE,CAAC,CACZ,SAAS,CAAC,CACR,+DACF,CAAC,CAED;YAAA,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAChC;YAAA,CAAC,CAAC,CAAE,CAAA,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAA,EAAE,CAAC,CACpC;UAAA,EAAE,KAAK,CAAC,CACT,CAAC,CACJ;MAAA,CAAC,QAAQ,CACP,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,CAAC,CAAC,CAAC,CAAC,CACR,SAAS,CAAC,CAAC,EAAE,CACX,KAAK;YACH,CAAC,CAAC,iDAAiD;YACnD,CAAC,CAAC,oDAAoD,EACxD,0GAA0G,EAC1G;YACE,gBAAgB,EAAE,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ;SAC7D,CACF,CAAC,CACF,IAAI,UAAU,CAAC,CACf,IAAI,QAAQ,CAAC,EAEf;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,qDAAqD,CAClE;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAC5C;UAAA,CAAC,oBAAoB,CAAC,SAAS,CAAC,aAAa,EAC/C;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import cn from 'classnames';\nimport { FieldErrorsImpl, FieldError } from 'react-hook-form';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\ninterface TextareaInputProps {\n  id: string;\n  fieldName: string;\n  required?: boolean;\n  variant?: 'small' | 'full';\n  register?: any;\n  error?: FieldErrorsImpl | FieldError;\n\n  [x: string]: any;\n}\n\nexport default function TextareaInput({\n  id,\n  fieldName,\n  required,\n  variant = 'full',\n\n  register,\n  error,\n  ...attributes\n}: TextareaInputProps) {\n  return (\n    <div\n      className={cn(\n        variant === 'full' ? 'col-span-2' : 'col-span-1',\n        'w-full flex flex-col',\n      )}\n    >\n      {fieldName &&\n        (fieldName.split('\\n').length == 1 ? (\n          <label\n            htmlFor={id}\n            className={'block pb-2 text-xs font-semibold text-gray-800'}\n          >\n            {fieldName} {required && <span className=\"text-red-500\">*</span>}\n          </label>\n        ) : (\n          <label\n            htmlFor={id}\n            className={\n              'flex justify-between pb-2 text-xs font-semibold text-gray-800'\n            }\n          >\n            <p>{fieldName.split('\\n')[0]}</p>\n            <p> {fieldName.split('\\n')[1]} </p>\n          </label>\n        ))}\n      <textarea\n        id={id}\n        rows={4}\n        className={cn(\n          error\n            ? 'placeholder-red-300 text-red-400 border-red-300'\n            : 'placeholder-gray-500 text-gray-800 border-gray-300',\n          'border px-3 py-3 bg-transparent rounded text-sm focus:outline-none focus:border-primary-500 min-h-[8rem]',\n          {\n            'cursor-default': attributes.disabled || attributes.readOnly,\n          },\n        )}\n        {...attributes}\n        {...register}\n      />\n      {error && (\n        <div className=\"flex items-center justify-between pt-1 text-red-400\">\n          <p className=\"text-xs\">{'error?.message'}</p>\n          <IoCloseCircleOutline className=\"w-4 h-4 m-0\" />\n        </div>\n      )}\n    </div>\n  );\n}\n"]}