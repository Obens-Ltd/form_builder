{"version":3,"file":"InputField.jsx","sourceRoot":"","sources":["InputField.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,YAAY,CAAC;AAE5B,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAkBvD,IAAM,UAAU,GAAG,UAAC,EAcF;IAbhB,IAAA,KAAK,WAAA,EACL,SAAS,eAAA,EACT,EAAE,QAAA,EACF,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,kBAAiB,EAAjB,UAAU,mBAAG,IAAI,KAAA,EACjB,eAAe,qBAAA,EACf,eAAe,qBAAA,EACf,QAAQ,cAAA,EACR,UAAU,gBAAA,EACP,UAAU,cAbK,qJAcnB,CADc;IAEb,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,CAC5B;MAAA,CAAC,KAAK,CACJ,SAAS,CAAC,CAAC,EAAE,CACX,oDAAoD,EACpD,eAAe,EACf,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CACrC,CAAC,CAEF;QAAA,CAAC,KAAK,CACN;QAAA,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,CAC3D;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,KAAK,CACJ,SAAS,CAAC,CAAC,EAAE,CACX,EAAE,CACA,+FAA+F,EAC/F,eAAe,CAChB,EACD,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CACjC,CAAC,CACF,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,UAAU,CAAC,CAAC,UAAU,CAAC,CACvB,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CACtB,GAAG,CAAC,CAAC,CAAC,CAAC,CACP,IAAI,UAAU,CAAC,CACf,IAAI,QAAQ,CAAC,EAEf;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,qDAAqD,CAClE;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,CAC3C;UAAA,CAAC,oBAAoB,CAAC,SAAS,CAAC,aAAa,EAC/C;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import cx from 'classnames';\nimport { FieldError, FieldErrorsImpl } from 'react-hook-form';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\n\ninterface InputFieldProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  hideLabel?: boolean;\n  id: string;\n  type: string;\n  register?: any;\n  error?: FieldError | FieldErrorsImpl;\n  horizontal?: boolean;\n  labelClassNames?: string;\n  inputClassNames?: string;\n  isEditable?: boolean;\n  attributes?: any;\n  required?: boolean;\n  dateFormat?: string;\n}\n\nconst InputField = ({\n  label,\n  hideLabel,\n  id,\n  type,\n  register,\n  error,\n  horizontal,\n  isEditable = true,\n  labelClassNames,\n  inputClassNames,\n  required,\n  dateFormat,\n  ...attributes\n}: InputFieldProps) => {\n  return (\n    <div className=\"flex flex-col\">\n      <label\n        className={cx(\n          'py-1 text-gray-800 text-sm font-semibold min-w-max',\n          labelClassNames,\n          hideLabel === true ? 'h-0 py-0' : '', // this a hack that allows you to hide labels while maintaining the same width of the input\n        )}\n      >\n        {label}\n        {required && <span className=\"ml-1 text-red-500\">*</span>}\n      </label>\n      <input\n        className={cx(\n          cx(\n            'w-full  max-w-md p-2 border text-gray-800 border-gray-300 rounded-sm focus:border-primary-500',\n            inputClassNames,\n          ),\n          !isEditable ? 'bg-gray-100' : '',\n        )}\n        id={id}\n        type={type}\n        dateFormat={dateFormat}\n        disabled={!isEditable}\n        min={0}\n        {...attributes}\n        {...register}\n      />\n      {error && (\n        <div className=\"flex items-center justify-between pt-1 text-red-400\">\n          <p className=\"text-xs\">{'error.message'}</p>\n          <IoCloseCircleOutline className=\"w-4 h-4 m-0\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n"]}