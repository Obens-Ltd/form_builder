{"version":3,"file":"CreatableSelectInput.jsx","sourceRoot":"","sources":["CreatableSelectInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,YAAY,CAAC;AAE5B,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AACvD,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAElD,OAAO,EAAE,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAe7D,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAC,EAWjB;IAV1B,IAAA,EAAE,QAAA,EACF,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,eAAgB,EAAhB,OAAO,mBAAG,MAAM,KAAA,EAEhB,OAAO,aAAA,EACP,iBAAiB,EAAjB,SAAS,mBAAG,KAAK,KAAA,EACjB,QAAQ,cAAA,EACR,KAAK,WAAA,EACF,UAAU,cAV8B,uFAW5C,CADc;IAEb,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,EAAE,CACX,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,EAChD,sBAAsB,CACvB,CAAC,CAEF;MAAA,CAAC,KAAK,CACJ,OAAO,CAAC,CAAC,EAAE,CAAC,CACZ,SAAS,CAAC,gDAAgD,CAE1D;QAAA,CAAC,SAAS,CAAE,CAAA,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAClE;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,YAAY,CACX,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,IAAI,UAAU,CAAC,CACf,eAAe,CAAC,cAAc,CAC9B,QAAQ,CAAC,CAAC,UAAC,IAAS;;YAClB,IAAM,KAAK,GAAG,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;YAE7D,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;gBACtC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;gBAC5B,CAAC,CAAC,SAAS;oBACT,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,EAAE,CAAC;YAExB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACF,MAAM,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CACrC,OAAO,CAAC,CAAC,OAAO,CAAC,EAEnB;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,qDAAqD,CAClE;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAC5C;UAAA,CAAC,oBAAoB,CAAC,SAAS,CAAC,aAAa,EAC/C;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import cn from 'classnames';\nimport { FieldError, FieldErrorsImpl } from 'react-hook-form';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\nimport CustomSelect from 'react-select/creatable';\n\nimport { selectStylesWithError } from '@utils/select.helper';\n\ninterface CreatableSelectInputProps {\n  id: string;\n  fieldName: string;\n  required?: boolean;\n  variant?: 'small' | 'full';\n  isHarvets?: boolean;\n  isMulti?: boolean;\n  register?: any;\n  error?: FieldError | FieldErrorsImpl;\n\n  [x: string]: any;\n}\n\nexport default function CreatableSelectInput({\n  id,\n  fieldName,\n  required,\n  variant = 'full',\n\n  isMulti,\n  isHarvets = false,\n  register,\n  error,\n  ...attributes\n}: CreatableSelectInputProps) {\n  return (\n    <div\n      className={cn(\n        variant === 'full' ? 'col-span-2' : 'col-span-1',\n        'w-full flex flex-col',\n      )}\n    >\n      <label\n        htmlFor={id}\n        className=\"block pb-2 text-xs font-semibold text-gray-800\"\n      >\n        {fieldName} {required && <span className=\"text-red-500\">*</span>}\n      </label>\n      <CustomSelect\n        id={id}\n        {...attributes}\n        classNamePrefix=\"obens-select\"\n        onChange={(tags: any) => {\n          const event = { target: { name: register.name, value: '' } };\n\n          event.target.value = Array.isArray(tags)\n            ? JSON.stringify(tags || [])\n            : isHarvets\n              ? tags\n              : tags?.value ?? '';\n\n          register.onChange(event);\n        }}\n        styles={selectStylesWithError(error)}\n        isMulti={isMulti}\n      />\n      {error && (\n        <div className=\"flex items-center justify-between pt-1 text-red-400\">\n          <p className=\"text-xs\">{'error?.message'}</p>\n          <IoCloseCircleOutline className=\"w-4 h-4 m-0\" />\n        </div>\n      )}\n    </div>\n  );\n}\n"]}